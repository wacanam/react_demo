{"version":3,"sources":["serviceWorker.js","context/auth.js","api.js","auth/Login.js","auth/AuthVoter.js","auth/Register.js","modals/ShowVoteElectionModal.js","dashboard/voter/Dashboard.js","modals/AddElectionModal.js","modals/EditElectionModal.js","modals/AddPostionModal.js","modals/AddCandidateModal.js","modals/AddVoterModal.js","modals/ShowElectionModal.js","dashboard/admin/Dashboard.js","PrivateRoute.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","AuthContext","createContext","useAuth","useContext","options","baseURL","timeout","maxAge","limit","exclude","paths","query","filter","invalidate","cfg","req","a","method","toLowerCase","store","removeItem","uuid","clearOnStale","clearOnError","readOnError","readHeaders","ignoreCache","debug","api","Axios","create","interceptors","response","use","Promise","resolve","reject","error","status","localStorage","setAuthHeaderToken","token","defaults","headers","common","token_type","React","memo","useState","username","setUsername","password","setPassword","feedbackMsg","setFeedbackMsg","authToken","setAuthToken","expires_in","Date","now","exact","to","className","success","message","onSubmit","e","preventDefault","post","then","res","console","log","data","catch","bind","this","htmlFor","type","id","placeholder","name","value","onChange","target","first_name","setFirst_name","last_name","setLast_name","email","setEmail","show","election","setElection","needUpdate","answer","setAnswer","useEffect","get","style","textAlign","display","fontSize","marginBlockStart","marginBlockEnd","marginInlineStart","marginInlineEnd","fontWeight","Modal","showVoteElectionModal","size","onHide","setShowVoteElectionModal","backdrop","keyboard","animation","Header","closeButton","Title","description","Body","title","onOptionSelect","answers","positions","map","position","index","questionNumber","key","candidates","candidate","users","onClick","authData","elections","setElections","user","role","href","length","created_at","colSpan","callBack","setTitle","setDescription","start_date","setStart_date","end_date","setEnd_date","showAddElectionModal","setShowAddElectionModal","setNeedUpdate","required","aria-label","data-tip","aria-describedby","showEditElectionModal","setShowEditElectionModal","put","defaultValue","setName","showAddPositionModal","setShowAddPositionModal","election_id","voter_id","setVoter_id","setUsers","showAddCandidateModal","setShowAddCandidateModal","position_id","user_id","setUser_id","showAddVoterModal","setShowAddVoterModal","setElection_id","setPosition_id","showElectionModal","setShowElectionModal","delete","updateElection","addPosition","addVoter","data-toggle","data-target","replace","aria-expanded","aria-controls","deletePosition","aria-labelledby","data-parent","addCandidate","votes","deleteCandidate","colspan","scope","pivot","voted","deleteVoter","editElection","PrivateRoute","Component","component","rest","render","props","isAuthenticated","App","document","JSON","parse","getItem","Provider","clear","setItem","stringify","path","Login","AuthVoter","Register","VotersDashboard","AdminDashboard","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d9b0d1e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}","import Axios from \"axios\";\r\n\r\nconst options = {\r\n  baseURL: \"https://online-election.herokuapp.com//api/v1/\",\r\n  timeout: 5 * 1000,\r\n  maxAge: 15 * 60 * 1000,\r\n  limit: false,\r\n  exclude: {\r\n    paths: [],\r\n    query: true,\r\n    filter: null,\r\n  },\r\n  invalidate: async (cfg, req) => {\r\n    const method = req.method.toLowerCase();\r\n    if (method !== \"get\") {\r\n      await cfg.store.removeItem(cfg.uuid);\r\n    }\r\n  },\r\n  clearOnStale: true,\r\n  clearOnError: true,\r\n  readOnError: false,\r\n  readHeaders: false,\r\n  ignoreCache: false,\r\n  debug: false,\r\n};\r\n\r\n\r\n\r\nconst api = Axios.create(options);\r\n\r\napi.interceptors.response.use(response => new Promise((resolve, reject) => resolve(response)),\r\n  error => {\r\n    if(!error.response){\r\n      return new Promise((resolve, reject) => {\r\n        reject(error);\r\n      });\r\n    }\r\n\r\n    if(error.response.status === 401){\r\n      localStorage.removeItem(\"authData\");\r\n      window.location = \"/login\";\r\n    } else {\r\n      return Promise((resolve, reject) => {\r\n        reject(error)\r\n      });\r\n    };\r\n  });\r\n\r\nexport default api;\r\n\r\nexport const setAuthHeaderToken = (token) => {\r\n  if (token) {\r\n    //applying token\r\n    api.defaults.headers.common[\"Authorization\"] = token.token_type + \" \" + token.token;\r\n  } else {\r\n    //deleting the token from header\r\n    delete api.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport api from \"../api\";\r\nimport { useAuth } from \"../context/auth\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [feedbackMsg, setFeedbackMsg] = useState();\r\n\r\n  const { authToken, setAuthToken } = useAuth();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (username && password) {\r\n      api\r\n        .post(\"admin/login\", { username, password })\r\n        .then((res) => {\r\n          console.log(res);\r\n          setFeedbackMsg(res.data);\r\n          if (res.status === 200) {\r\n            setAuthToken(res.data);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return authToken !== null && authToken.expires_in < Date.now() ? (\r\n    <Redirect exact to=\"/admin\" />\r\n  ) : (\r\n    <div>\r\n      <div className=\"container jumbotron col-6\">\r\n        <div className=\"\">\r\n          <h2 className=\"text-center\">Admin Login</h2>\r\n          <p></p>\r\n        </div>\r\n        {feedbackMsg && (\r\n          <div className=\"\">\r\n            <h6\r\n              className={`text-center ${\r\n                feedbackMsg.success ? \"text-success\" : \"text-danger\"\r\n              }`}\r\n            >\r\n              {feedbackMsg.message}\r\n            </h6>\r\n            <p></p>\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleLogin.bind(this)}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input\r\n              type=\"username\"\r\n              className=\"form-control\"\r\n              id=\"username\"\r\n              placeholder=\"Enter username\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"pwd\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"pwd\"\r\n              placeholder=\"Enter password\"\r\n              name=\"pswd\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Login);\r\n","import { Redirect } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport api from \"../api\";\r\nimport { useAuth } from \"../context/auth\";\r\n\r\nfunction AuthVoter() {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [feedbackMsg, setFeedbackMsg] = useState();\r\n\r\n  const { authToken, setAuthToken } = useAuth();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (username && password) {\r\n      api\r\n        .post(\"user/login\", { username, password })\r\n        .then((res) => {\r\n          console.log(res);\r\n          setFeedbackMsg(res.data);\r\n          if (res.status === 200) {\r\n            setAuthToken(res.data);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return authToken !== null && authToken.expires_in < Date.now() ? (\r\n    <Redirect exact to=\"/\" />\r\n  ) : (\r\n    <div>\r\n      <div className=\"container jumbotron col-6\">\r\n        <div className=\"\">\r\n          <h2 className=\"text-center\">Voter's Login</h2>\r\n          <p></p>\r\n        </div>\r\n        {feedbackMsg && (\r\n          <div className=\"\">\r\n            <h6\r\n              className={`text-center ${\r\n                feedbackMsg.success ? \"text-success\" : \"text-danger\"\r\n              }`}\r\n            >\r\n              {feedbackMsg.message}\r\n            </h6>\r\n            <p></p>\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleLogin.bind(this)}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"voters_id\">Voter's ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"voters_id\"\r\n              placeholder=\"Enter voter's ID\"\r\n              name=\"voters_id\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"voters_key\">Voter's Key:</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"voters_key\"\r\n              placeholder=\"Enter voter's key\"\r\n              name=\"voters_key\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(AuthVoter);\r\n","import React, { useState } from \"react\";\r\nimport api from \"../api\";\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [first_name, setFirst_name] = useState();\r\n  const [last_name, setLast_name] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [feedbackMsg, setFeedbackMsg] = useState();\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (username && password) {\r\n      api\r\n        .post(\"user/register\", { username, password, first_name, last_name, email })\r\n        .then((res) => {\r\n          console.log(res);\r\n          setFeedbackMsg(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container jumbotron col-6\">\r\n        <div className=\"\">\r\n          <h2 className=\"text-center\">Register Voter</h2>\r\n          <p></p>\r\n        </div>\r\n        {feedbackMsg && (\r\n          <div className=\"\">\r\n            <h6\r\n              className={`text-center ${\r\n                feedbackMsg.success ? \"text-success\" : \"text-danger\"\r\n              }`}\r\n            >\r\n              {feedbackMsg.message}\r\n            </h6>\r\n            <p></p>\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleRegister.bind(this)}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"voters_id\">Voter's ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"voters_id\"\r\n              placeholder=\"Enter voters_id\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"voters_key\">Voter's Key:</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"voters_key\"\r\n              placeholder=\"Enter Voter's Key\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"first_name\">First name:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"first_name\"\r\n              placeholder=\"Enter First name\"\r\n              value={first_name}\r\n              onChange={(e) => setFirst_name(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"last_name\">Last name:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"last_name\"\r\n              placeholder=\"Enter Last name\"\r\n              value={last_name}\r\n              onChange={(e) => setLast_name(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n              Regiter\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Register);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Test, QuestionGroup, Question, Option } from \"react-multiple-choice\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport api from \"../api\";\r\n\r\nfunction ShowVoteElectionModal({ show, id }) {\r\n  const [election, setElection] = useState();\r\n\r\n  const [needUpdate, setNeedUpdate] = useState(0);\r\n  const [answer, setAnswer] = useState({});\r\n\r\n  const submitVote = () => {\r\n    console.log(answer);\r\n\r\n  }\r\n  useEffect(() => {\r\n    api\r\n      .get(`user/election/${id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setElection(res.data.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [id, needUpdate]);\r\n\r\n  const style = {\r\n    textAlign: \"center\",\r\n    display: \"block\",\r\n    fontSize: \"1.5em\",\r\n    marginBlockStart: \"0.83em\",\r\n    marginBlockEnd: \"0.83em\",\r\n    marginInlineStart: \"0px\",\r\n    marginInlineEnd: \"0px\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show.showVoteElectionModal}\r\n        size=\"xl\"\r\n        onHide={() => show.setShowVoteElectionModal(false)}\r\n        backdrop=\"static\"\r\n        keyboard={true}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Election Ballot | {election && election.description}\r\n            <small>\r\n              Press <code>ESC</code> to exit.\r\n            </small>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-0\">\r\n        {election && \r\n          <div className=\"text-center\">\r\n                <div className=\"text-left m-3\">\r\n                  <h5>Title: {election.title}</h5>\r\n                  <p>Description: {election.description}</p>\r\n                </div>\r\n            <Test\r\n              onOptionSelect={(answers) => setAnswer(answers)}\r\n            >\r\n              {election.positions.map((position, index) => (\r\n                  <QuestionGroup questionNumber={position.id} key={position.id}>\r\n                    <Question style={style}>{index+1}. {position.name}</Question>\r\n                    {position.candidates.map((candidate) => \r\n                        <Option value={candidate.users[0].id} key={candidate.id}>{candidate.users[0].first_name + \" \"+ candidate.users[0].last_name}</Option>\r\n                    )}\r\n                  </QuestionGroup>\r\n                ))}\r\n            </Test>\r\n                      <hr/>\r\n\r\n            <div className=\"text-center float-right\">\r\n              <button className=\"btn btn-primary m-2\" onClick={submitVote}>Submit</button>\r\n              <button className=\"btn btn-dark m-2\">Cancel</button>\r\n            </div>\r\n          </div>\r\n        }\r\n        </Modal.Body>\r\n        <ReactTooltip />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(ShowVoteElectionModal);\r\n","import React, {useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/auth\";\r\nimport api, { setAuthHeaderToken } from \"../../api\";\r\nimport ShowVoteElectionModal from \"../../modals/ShowVoteElectionModal\";\r\n\r\nconst Dashboard = () => {\r\n\r\n  const authData = useAuth();\r\n\r\n  const [needUpdate, setNeedUpdate] = useState(0);\r\n  const [elections, setElections] = useState(0);\r\n  const [election, setElection] = useState(0);\r\n  const [showVoteElectionModal, setShowVoteElectionModal] = useState(false);\r\n\r\n  const handleLogout = () => {\r\n    api\r\n      .get(\"user/logout\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.status === 200) {\r\n            authData.setAuthToken(null);\r\n            setAuthHeaderToken(false);\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n  const voteElection = (id) => {\r\n    setElection(id);\r\n    setShowVoteElectionModal(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`user/${authData.authToken.user.id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setElections(res.data.data.elections);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [needUpdate]);\r\n  \r\n  return authData && authData.authToken.user.role !== \"voter\" ? (\r\n    <Redirect exact to=\"/admin\" />\r\n  ) : (\r\n    <div>\r\n      <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\r\n        <h5 className=\"my-0 mr-md-auto font-weight-normal\">CRUD Election System</h5>\r\n        <nav className=\"my-2 my-md-0 mr-md-3\">\r\n          <a className=\"p-2 text-dark\" href=\"#\">\r\n            Elections\r\n          </a>\r\n        </nav>\r\n        <button className=\"btn btn-outline-primary\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Election Name</th>\r\n                <th>Description</th>\r\n                <th>Date Created</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {elections && elections.length? (\r\n                elections.map((election, index) => (\r\n                  <tr key={index}>\r\n                    <td>{election.id}</td>\r\n                    <td>{election.title}</td>\r\n                    <td>{election.description}</td>\r\n                    <td>{election.created_at}</td>\r\n                    <td>\r\n                      <button className=\"btn btn-sm btn-info mx-1\" onClick={() => voteElection(election.id)}>Vote</button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <td colSpan=\"5\" className=\"text-center\">No Election found!</td>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {showVoteElectionModal && <ShowVoteElectionModal show={{showVoteElectionModal, setShowVoteElectionModal}}  id={election}/>}\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default React.memo(Dashboard);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport api from \"../api\";\r\n\r\nfunction AddElectionModal({ show, callBack }) {\r\n  const [title, setTitle] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [start_date, setStart_date] = useState();\r\n  const [end_date, setEnd_date] = useState();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title) {\r\n      api\r\n        .post(\"admin/election/store\", {\r\n          title,\r\n          description,\r\n          start_date,\r\n          end_date,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.status === 200) {\r\n            console.log(\"Saved\");\r\n            show.setShowAddElectionModal(false);\r\n            callBack.setNeedUpdate(callBack.needUpdate + 1);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show.showAddElectionModal}\r\n        size=\"md\"\r\n        onHide={() => show.setShowAddElectionModal(false)}\r\n        backdrop=\"static\"\r\n        keyboard={true}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            New Election Form |{\" \"}\r\n            <small>\r\n              Press <code>ESC</code> to exit.\r\n            </small>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-0\">\r\n          <form onSubmit={handleSubmit.bind(this)}>\r\n            <div>\r\n              <p className=\"card-description\">\r\n                Input basic election parameters\r\n              </p>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text bg-primary border-primary\"\r\n                      id=\"input-title\"\r\n                    >\r\n                      <i className=\"mdi mdi-pound text-white\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Title\"\r\n                    aria-label=\"title\"\r\n                    data-tip=\"This will serve as title\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text bg-primary border-primary\"\r\n                      id=\"input-type-selector\"\r\n                    >\r\n                      <i className=\"mdi mdi-view-list text-white\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    placeholder=\"Description (optional)\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"description\"\r\n                    aria-describedby=\"description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-6 form-group\">\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span\r\n                        className=\"input-group-text bg-primary border-primary\"\r\n                        id=\"colored-addon3\"\r\n                      >\r\n                        <i className=\"mdi mdi-play text-white\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"datetime-local\"\r\n                      className=\"form-control\"\r\n                      aria-describedby=\"colored-addon3\"\r\n                      data-tip=\"Specify the Date and time for the announcement will start\"\r\n                      value={start_date}\r\n                      onChange={(e) => setStart_date(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 form-group\">\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span\r\n                        className=\"input-group-text bg-primary border-primary\"\r\n                        id=\"colored-addon3\"\r\n                      >\r\n                        <i className=\"mdi mdi-stop text-white\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"datetime-local\"\r\n                      className=\"form-control\"\r\n                      aria-describedby=\"colored-addon3\"\r\n                      data-tip=\"Specify the Date and time for the announcement will end\"\r\n                      value={end_date}\r\n                      onChange={(e) => setEnd_date(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"float-right\">\r\n              <button type=\"submit\" className=\"btn btn-success mx-1\">\r\n                Create\r\n              </button>\r\n              <button\r\n                className=\"btn btn-warning mx-1\"\r\n                onClick={() => show.setShowAddElectionModal(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <ReactTooltip />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(AddElectionModal);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport api from \"../api\";\r\n\r\nfunction EditElectionModal({ show, election, callBack }) {\r\n  const [title, setTitle] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [start_date, setStart_date] = useState();\r\n  const [end_date, setEnd_date] = useState();\r\n\r\n  useEffect(()=> {\r\n    setTitle(election && election.title);\r\n    setDescription(election && election.description);\r\n    setStart_date(election && election.start_date);\r\n    setEnd_date(election && election.end_date);\r\n  },[election && election.id])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title) {\r\n      api\r\n        .put(`admin/election/update/${election.id}`, {\r\n          title,\r\n          description,\r\n          start_date,\r\n          end_date,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.status === 200) {\r\n            console.log(\"Updated\");\r\n            show.setShowEditElectionModal(false);\r\n            callBack.setNeedUpdate(callBack.needUpdate + 1);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show.showEditElectionModal}\r\n        size=\"md\"\r\n        onHide={() => show.setShowEditElectionModal(false)}\r\n        backdrop=\"static\"\r\n        keyboard={true}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Edit Election {election && election.id } Form |{\" \"}\r\n            <small>\r\n              Press <code>ESC</code> to exit.\r\n            </small>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-0\">\r\n          <form onSubmit={handleSubmit.bind(this)}>\r\n            <div>\r\n              <p className=\"card-description\">\r\n                Input basic election parameters\r\n              </p>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text bg-primary border-primary\"\r\n                      id=\"input-title\"\r\n                    >\r\n                      <i className=\"mdi mdi-pound text-white\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Title\"\r\n                    aria-label=\"title\"\r\n                    data-tip=\"This will serve as title\"\r\n                    defaultValue={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text bg-primary border-primary\"\r\n                      id=\"input-type-selector\"\r\n                    >\r\n                      <i className=\"mdi mdi-view-list text-white\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    placeholder=\"Description (optional)\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"description\"\r\n                    aria-describedby=\"description\"\r\n                    defaultValue={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-6 form-group\">\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span\r\n                        className=\"input-group-text bg-primary border-primary\"\r\n                        id=\"colored-addon3\"\r\n                      >\r\n                        <i className=\"mdi mdi-play text-white\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"datetime-local\"\r\n                      className=\"form-control\"\r\n                      aria-describedby=\"colored-addon3\"\r\n                      data-tip=\"Specify the Date and time for the announcement will start\"\r\n                      defaultValue={start_date}\r\n                      onChange={(e) => setStart_date(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 form-group\">\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span\r\n                        className=\"input-group-text bg-primary border-primary\"\r\n                        id=\"colored-addon3\"\r\n                      >\r\n                        <i className=\"mdi mdi-stop text-white\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"datetime-local\"\r\n                      className=\"form-control\"\r\n                      aria-describedby=\"colored-addon3\"\r\n                      data-tip=\"Specify the Date and time for the announcement will end\"\r\n                      defaultValue={end_date}\r\n                      onChange={(e) => setEnd_date(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"float-right\">\r\n              <button type=\"submit\" className=\"btn btn-success mx-1\">\r\n                Create\r\n              </button>\r\n              <button\r\n                className=\"btn btn-warning mx-1\"\r\n                onClick={() => show.setShowEditElectionModal(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <ReactTooltip />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(EditElectionModal);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport api from \"../api\";\r\n\r\nfunction AddPositionModal({ show, callBack, election }) {\r\n  const [name, setName] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [election_id, setElection_id] = useState();\r\n  const [elections, setElections] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name) {\r\n      api\r\n        .post(\"admin/position/store\", {\r\n          name,\r\n          description,\r\n          election_id: election\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.status === 200) {\r\n            console.log(\"Saved\");\r\n            show.setShowAddPositionModal(false);\r\n            callBack.setNeedUpdate(callBack.needUpdate + 1);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n//   useEffect(() => {\r\n//     api\r\n//       .get(\"admin/election\")\r\n//       .then((res) => {\r\n//         console.log(res);\r\n//         if (res.status === 200) {\r\n//           setElections(res.data.data);\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(error);\r\n//       });\r\n//   }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show.showAddPositionModal}\r\n        size=\"lg\"\r\n        onHide={() => show.setShowAddPositionModal(false)}\r\n        backdrop=\"static\"\r\n        keyboard={true}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Add Position Form |{\" \"}\r\n            <small>\r\n              Press <code>ESC</code> to exit.\r\n            </small>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-0\">\r\n          <form onSubmit={handleSubmit.bind(this)}>\r\n            <div>\r\n              <p className=\"card-description\">\r\n                Input basic election parameters\r\n              </p>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text bg-primary border-primary\"\r\n                      id=\"input-name\"\r\n                    >\r\n                      <i className=\"mdi mdi-pound text-white\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Position\"\r\n                    aria-label=\"position\"\r\n                    data-tip=\"This will serve as position\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text bg-primary border-primary\"\r\n                      id=\"input-description\"\r\n                    >\r\n                      <i className=\"mdi mdi-pound text-white\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Description (optional)\"\r\n                    aria-label=\"description\"\r\n                    data-tip=\"This will serve as description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"float-right\">\r\n              <button type=\"submit\" className=\"btn btn-success mx-1\">\r\n                Create\r\n              </button>\r\n              <button\r\n                className=\"btn btn-warning mx-1\"\r\n                onClick={() => show.setShowAddPositionModal(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <ReactTooltip />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(AddPositionModal);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport api from \"../api\";\r\n\r\nfunction AddCandidateModal({ show, callBack, position }) {\r\n  const [voter_id, setVoter_id] = useState();\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (voter_id) {\r\n      api\r\n        .post(\"admin/candidate/store\", {\r\n          voter_id,\r\n          position_id: position,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.status === 200) {\r\n            console.log(\"Saved\");\r\n            show.setShowAddCandidateModal(false);\r\n            callBack.setNeedUpdate(callBack.needUpdate + 1);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    api\r\n      .get(\"admin/user\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setUsers(res.data.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show.showAddCandidateModal}\r\n        size=\"lg\"\r\n        onHide={() => show.setShowAddCandidateModal(false)}\r\n        backdrop=\"static\"\r\n        keyboard={true}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Add Candidate Form |{\" \"}\r\n            <small>\r\n              Press <code>ESC</code> to exit.\r\n            </small>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-0\">\r\n          <form onSubmit={handleSubmit.bind(this)}>\r\n            <div>\r\n              <p className=\"card-description\">\r\n                Input basic candidate parameters\r\n              </p>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text bg-primary border-primary\"\r\n                      id=\"input-type-selector\"\r\n                    >\r\n                      <i className=\"mdi mdi-view-list text-white\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <select\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    aria-label=\"voter_id\"\r\n                    aria-describedby=\"voter_id\"\r\n                    value={voter_id}\r\n                    onChange={(e) => setVoter_id(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select Voter</option>\r\n                    {users &&\r\n                      users.map((user) => (\r\n                        <option value={user.id}>\r\n                          {user.last_name + \", \" + user.first_name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text bg-primary border-primary\"\r\n                      id=\"input-type-selector\"\r\n                    >\r\n                      <i className=\"mdi mdi-view-list text-white\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <select\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    aria-label=\"postion_id\"\r\n                    aria-describedby=\"postion_id\"\r\n                    value={positions_id}\r\n                    onChange={(e) => setPositionss_id(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select Positions</option>\r\n                  </select>\r\n                </div>\r\n              </div> */}\r\n            </div>\r\n            <div className=\"float-right\">\r\n              <button type=\"submit\" className=\"btn btn-success mx-1\">\r\n                Create\r\n              </button>\r\n              <button\r\n                className=\"btn btn-warning mx-1\"\r\n                onClick={() => show.setShowAddCandidateModal(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <ReactTooltip />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(AddCandidateModal);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport api from \"../api\";\r\n\r\nfunction AddVoterModal({ show, callBack, election }) {\r\n  const [user_id, setUser_id] = useState();\r\n\r\n  const [users, setUsers] = useState();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (user_id) {\r\n      api\r\n        .post(\"admin/election-voter/store\", {\r\n          user_id,\r\n          election_id : election\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.status === 200) {\r\n            console.log(\"Saved\");\r\n            show.setShowAddVoterModal(false);\r\n            callBack.setNeedUpdate(callBack.needUpdate + 1);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    api\r\n      .get(\"admin/user\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setUsers(res.data.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show.showAddVoterModal}\r\n        size=\"lg\"\r\n        onHide={() => show.setShowAddVoterModal(false)}\r\n        backdrop=\"static\"\r\n        keyboard={true}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Add Voter Form |{\" \"}\r\n            <small>\r\n              Press <code>ESC</code> to exit.\r\n            </small>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-0\">\r\n          <form onSubmit={handleSubmit.bind(this)}>\r\n            <div>\r\n              <p className=\"card-description\">\r\n                Input basic candidate parameters\r\n              </p>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text bg-primary border-primary\"\r\n                      id=\"input-type-selector\"\r\n                    >\r\n                      <i className=\"mdi mdi-view-list text-white\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <select\r\n                    required={true}\r\n                    className=\"form-control\"\r\n                    aria-label=\"user_id\"\r\n                    aria-describedby=\"user_id\"\r\n                    value={user_id}\r\n                    onChange={(e) => setUser_id(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select Voter</option>\r\n                    {users &&\r\n                      users.map((user) => (\r\n                        <option value={user.id}>\r\n                          {user.last_name + \", \" + user.first_name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"float-right\">\r\n              <button type=\"submit\" className=\"btn btn-success mx-1\">\r\n                Create\r\n              </button>\r\n              <button\r\n                className=\"btn btn-warning mx-1\"\r\n                onClick={() => show.setShowAddVoterModal(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <ReactTooltip />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(AddVoterModal);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n// import \"bootstrap\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport api from \"../api\";\r\nimport AddPositionModal from \"./AddPostionModal\";\r\nimport AddCandidateModal from \"./AddCandidateModal\";\r\nimport AddVoterModal from \"./AddVoterModal\";\r\n\r\nfunction ShowElectionModal({ show, id }) {\r\n  const [election, setElection] = useState();\r\n\r\n  const [needUpdate, setNeedUpdate] = useState(0);\r\n  const [showAddCandidateModal, setShowAddCandidateModal] = useState(false);\r\n  const [showAddPositionModal, setShowAddPositionModal] = useState(false);\r\n  const [showAddVoterModal, setShowAddVoterModal] = useState(false);\r\n  const [election_id, setElection_id] = useState();\r\n  const [position_id, setPosition_id] = useState();\r\n\r\n  const addCandidate = (id) => {\r\n    setPosition_id(id);\r\n    setShowAddCandidateModal(true);\r\n  };\r\n\r\n  const addPosition = (id) => {\r\n    setElection_id(id);\r\n    setShowAddPositionModal(true);\r\n  };\r\n  \r\n  const addVoter = (id) => {\r\n    setElection_id(id);\r\n    setShowAddVoterModal(true);\r\n  };\r\n\r\n  const deleteCandidate = (id) => {\r\n    api\r\n      .delete(`admin/candidate/delete/${id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          console.log(res.data.message);\r\n          setNeedUpdate(needUpdate + 1);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  const deletePosition = (id) => {\r\n    api\r\n      .delete(`admin/position/delete/${id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          console.log(res.data.message);\r\n          setNeedUpdate(needUpdate + 1);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  const deleteVoter = (id) => {\r\n    api\r\n      .delete(`admin/election-voter/delete/${id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          console.log(res.data.message);\r\n          setNeedUpdate(needUpdate + 1);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  const updateElection = (id) => {\r\n    api\r\n      .delete(`admin/election/update/${id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          console.log(res.data.message);\r\n          setNeedUpdate(needUpdate + 1);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`admin/election/${id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setElection(res.data.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [id, needUpdate]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show.showElectionModal}\r\n        size=\"xl\"\r\n        onHide={() => show.setShowElectionModal(false)}\r\n        backdrop=\"static\"\r\n        keyboard={true}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Election Report |{\" \"}\r\n            <small>\r\n              Press <code>ESC</code> to exit.\r\n            </small>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-0\">\r\n          {election && (\r\n            <div className=\"m-2\">\r\n              <button\r\n                className=\"btn btn-sm btn-info float-right\"\r\n                onClick={() => updateElection(election.id)}\r\n              >\r\n                Update\r\n              </button>\r\n              <h6>\r\n                Name : <code>{election.title}</code>\r\n              </h6>\r\n              <h6>\r\n                Description : <code>{election.description}</code>\r\n              </h6>\r\n              <h6>\r\n                Date created : <code>{election.created_at}</code>\r\n              </h6>\r\n              <h6>\r\n                Status : <code>{}</code>\r\n              </h6>\r\n              <h6>\r\n                Start Date : <code>{election.start_date}</code>\r\n              </h6>\r\n              <h6>\r\n                End Date : <code>{election.end_date}</code>\r\n              </h6>\r\n              <hr />\r\n              <div className=\"text-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary btn-sm m-2\"\r\n                  onClick={() => addPosition(election.id)}\r\n                >\r\n                  Add Position\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary btn-sm m-2\"\r\n                  onClick={() => addVoter(election.id)}\r\n                >\r\n                  Add Voters\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"accordion col-6\" id=\"election_result\">\r\n                  <div className=\"card\">\r\n                    {election.positions.length ? (\r\n                      election.positions.map((position, index) => (\r\n                        <>\r\n                          <div className=\"card-header\" id=\"result\" key={index}>\r\n                            <h5 className=\"mb-0\">\r\n                              <button\r\n                                className=\"btn btn-link text-decoration-none\"\r\n                                type=\"button\"\r\n                                data-toggle=\"collapse\"\r\n                                data-target={`#${position.name.replace(\r\n                                  /[^A-Z0-9]/gi,\r\n                                  \"\"\r\n                                )}`}\r\n                                aria-expanded=\"true\"\r\n                                aria-controls={position.name.replace(\r\n                                  /[^A-Z0-9]/gi,\r\n                                  \"\"\r\n                                )}\r\n                              >\r\n                                <i className=\"fa fa-arrow-down\"></i>\r\n                                {position.name + \" | \" + position.description}\r\n                              </button>\r\n                              <button\r\n                                className=\"btn btn-sm btn-warning float-right\"\r\n                                onClick={() => deletePosition(position.id)}\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </h5>\r\n                          </div>\r\n\r\n                          <div\r\n                            id={`${position.name.replace(/[^A-Z0-9]/gi, \"\")}`}\r\n                            className=\"collapse\"\r\n                            aria-labelledby=\"result\"\r\n                            data-parent=\"#election_result\"\r\n                          >\r\n                            <div className=\"card-body pt-0\">\r\n                              <div className=\"\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary btn-sm m-2\"\r\n                                  onClick={() => addCandidate(position.id)}\r\n                                >\r\n                                  Add Candidate\r\n                                </button>\r\n                              </div>\r\n                              <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped table-sm table-bordered text-center\">\r\n                                  <thead className=\"text-center\">\r\n                                    <tr>\r\n                                      <th>Candidate</th>\r\n                                      <th>Votes</th>\r\n                                      <th>Remarks</th>\r\n                                      <th>Action</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody className=\"text-center\">\r\n                                    {position.candidates.length ? (\r\n                                      position.candidates.map(\r\n                                        (candidate, index) => (\r\n                                          <tr key={index}>\r\n                                            <td>\r\n                                              {candidate.users[0].last_name +\r\n                                                \", \" +\r\n                                                candidate.users[0].first_name}\r\n                                            </td>\r\n                                            <td>{candidate.votes}</td>\r\n                                            <td></td>\r\n                                            <td>\r\n                                              <button\r\n                                                className=\"btn btn-sm btn-warning mx-1\"\r\n                                                onClick={() =>\r\n                                                  deleteCandidate(candidate.id)\r\n                                                }\r\n                                              >\r\n                                                Delete\r\n                                              </button>\r\n                                            </td>\r\n                                          </tr>\r\n                                        )\r\n                                      )\r\n                                    ) : (\r\n                                      <td colspan=\"4\">No Candidates</td>\r\n                                    )}\r\n                                  </tbody>\r\n                                </table>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </>\r\n                      ))\r\n                    ) : (\r\n                      <h4 className=\"text-center\">No Position Added</h4>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <h4 className=\"my-2\">Voters List</h4>\r\n                  <table className=\"table table-striped table-sm table-bordered text-center\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">First</th>\r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">Voted</th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {election.users ? (\r\n                        election.users.map((user, index) => (\r\n                          <tr key={index}>\r\n                            <th scope=\"row\">{user.id}</th>\r\n                            <td>{user.first_name}</td>\r\n                            <td>{user.last_name}</td>\r\n                            <td>{user.pivot.voted? \"Yes\":\"No\"}</td>\r\n                            <td>\r\n                              <button\r\n                                className=\"btn btn-sm btn-warning\"\r\n                                onClick={() => deleteVoter(user.pivot.id)}\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))\r\n                      ) : (\r\n                        <td>No Voters</td>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n        <ReactTooltip />\r\n      </Modal>\r\n\r\n      {showAddPositionModal && (\r\n        <AddPositionModal\r\n          show={{ showAddPositionModal, setShowAddPositionModal }}\r\n          callBack={{ needUpdate, setNeedUpdate }}\r\n          election={election_id}\r\n        />\r\n      )}\r\n      {showAddCandidateModal && (\r\n        <AddCandidateModal\r\n          show={{ showAddCandidateModal, setShowAddCandidateModal }}\r\n          callBack={{ needUpdate, setNeedUpdate }}\r\n          position={position_id}\r\n        />\r\n      )}\r\n      {showAddVoterModal && (\r\n        <AddVoterModal\r\n          show={{ showAddVoterModal, setShowAddVoterModal }}\r\n          callBack={{ needUpdate, setNeedUpdate }}\r\n          election={election_id}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(ShowElectionModal);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/auth\";\r\nimport api, { setAuthHeaderToken } from \"../../api\";\r\nimport AddElectionModal from '../../modals/AddElectionModal';\r\nimport EditElectionModal from '../../modals/EditElectionModal';\r\nimport ShowElectionModal from \"../../modals/ShowElectionModal\";\r\n\r\nconst Dashboard = () => {\r\n\r\n  const authData = useAuth();\r\n\r\n  const [needUpdate, setNeedUpdate] = useState(0);\r\n  const [showAddElectionModal, setShowAddElectionModal] = useState(false);\r\n  const [showEditElectionModal, setShowEditElectionModal] = useState(false);\r\n  const [showElectionModal, setShowElectionModal] = useState(false);\r\n  const [elections, setElections] = useState([]);\r\n  const [election, setElection] = useState();\r\n\r\n  const handleLogout = () => {\r\n    api\r\n      .get(\"admin/logout\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.status === 200) {\r\n          authData.setAuthToken(null);\r\n          setAuthHeaderToken(false);\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n  const deleteElection = (id) => {\r\n    api.delete(`admin/election/delete/${id}`).then(res => {\r\n      console.log(res);\r\n      if(res.status === 200){\r\n        setNeedUpdate(needUpdate + 1);\r\n      }\r\n    })\r\n      \r\n  }\r\n  const editElection = (election) => {\r\n    setElection(election);\r\n    setShowEditElectionModal(true);\r\n  }\r\n  const showElection = (id) => {\r\n    setElection(id);\r\n    setShowElectionModal(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`admin/election/get/${authData.authToken.user.id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setElections(res.data.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [needUpdate]);\r\n\r\n  return authData && authData.authToken.user.role !== \"admin\" ? (\r\n    <Redirect exact to=\"/\" />\r\n  ) : (\r\n    <div>\r\n      <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\r\n        <h5 className=\"my-0 mr-md-auto font-weight-normal\">CRUD Election System</h5>\r\n        <nav className=\"my-2 my-md-0 mr-md-3\">\r\n          <a className=\"p-2 text-dark\" href=\"#\">\r\n            Elections\r\n          </a>\r\n          <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={() => setShowAddElectionModal(true)}\r\n          >\r\n            Create Election\r\n          </button>\r\n        </nav>\r\n        <button className=\"btn btn-outline-primary\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Election Name</th>\r\n                <th>Description</th>\r\n                <th>Date Created</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {elections && elections.length? (\r\n                elections.map((election, index) => (\r\n                  <tr key={index}>\r\n                    <td>{election.id}</td>\r\n                    <td>{election.title}</td>\r\n                    <td>{election.description}</td>\r\n                    <td>{election.created_at}</td>\r\n                    <td>\r\n                      <button className=\"btn btn-sm btn-warning mx-1\" onClick={() => deleteElection(election.id)}>Delete</button>\r\n                      <button className=\"btn btn-sm btn-info mx-1\" onClick={() => editElection(election)}>Edit</button>\r\n                      <button className=\"btn btn-sm btn-success mx-1\" onClick={() => showElection(election.id)}>Show</button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <td colSpan=\"5\" className=\"text-center\">No Election found!</td>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {showElectionModal && <ShowElectionModal show={{showElectionModal, setShowElectionModal}}  id={election}/>}\r\n      {showAddElectionModal && <AddElectionModal show={{showAddElectionModal, setShowAddElectionModal}} callBack={{needUpdate,setNeedUpdate}}/>}\r\n      {showEditElectionModal && <EditElectionModal show={{showEditElectionModal, setShowEditElectionModal}} election={election} callBack={{needUpdate,setNeedUpdate}}/>}\r\n    </div>\r\n  );\r\n};\r\nexport default React.memo(Dashboard);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from \"./context/auth\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const authData = useAuth();\r\n    const isAuthenticated = (authData) => {\r\n        return (authData.authToken !== null && authData.authToken.expires_in < Date.now())? true : false;\r\n    }\r\n    return <Route {...rest} render= {(props) => isAuthenticated(authData) ? (<Component {...props} />) : (<Redirect exact to=\"/login\" />)}/>;\r\n}\r\nexport default PrivateRoute;","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { AuthContext } from './context/auth';\r\nimport Login from './auth/Login';\r\nimport AuthVoter from \"./auth/AuthVoter\";\r\nimport Register from \"./auth/Register\";\r\nimport VotersDashboard from \"./dashboard/voter/Dashboard\";\r\nimport AdminDashboard from \"./dashboard/admin/Dashboard\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nimport { setAuthHeaderToken } from './api';\r\n\r\nexport default function App() {\r\n  document.title = \"Election\";\r\n\r\n  const [authToken, setAuthToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"authData\"))\r\n  );\r\n\r\n  const setToken = (authData) => {\r\n    authData === null\r\n      ? localStorage.clear()\r\n      : localStorage.setItem(\"authData\", JSON.stringify(authData));\r\n    setAuthToken(authData);\r\n  };\r\n\r\n  setAuthHeaderToken(authToken);\r\n\r\n  return (\r\n      <AuthContext.Provider value={{ authToken, setAuthToken: setToken }}>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/admin/login\" component={Login} />\r\n            <Route exact path=\"/login\" component={AuthVoter} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <PrivateRoute exact path=\"/\" component={VotersDashboard} />\r\n            \r\n            <PrivateRoute exact path=\"/admin\" component={AdminDashboard} />\r\n            <Route\r\n              render={() => (\r\n                <h1 className=\"jumbotron text-center\">404 | Not Found</h1>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </AuthContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}